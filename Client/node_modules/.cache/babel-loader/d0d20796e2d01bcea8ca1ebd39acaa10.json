{"ast":null,"code":"var _jsxFileName = \"F:\\\\IsementAdvert\\\\MarkeTution\\\\marketution\\\\Client\\\\src\\\\components\\\\signup\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Axios from 'axios';\nimport './Signup.css';\nimport imgusername from './images/icon/user.png';\nimport imgemail from './images/icon/email.png';\nimport imgcontacts from './images/icon/contacts.png';\nimport imgprofession from './images/icon/profession.png';\nimport imgpassword from './images/icon/password.png';\nimport imgfacebook from './images/icon/facebook.png';\nimport imggoogle from './images/icon/google.png';\nimport Login from './google/Googlesigin';\nimport Navbar from '../navbar/Navbar';\nimport Footer from '../footer/Footer';\nimport { useHistory } from 'react-router-dom';\nimport { userSchema } from './UserValidation.js';\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from 'formik'; // import { TextField } from './TextField';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const validate = Yup.object({\n    userName: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\n    lastName: Yup.string().max(20, 'Must be 20 characters or less').required('Required'),\n    email: Yup.string().email('Email is invalid').required('Email is required'),\n    password: Yup.string().min(6, 'Password must be at least 6 charaters').required('Password is required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Password must match').required('Confirm password is required')\n  });\n  const [username, setUsername] = useState('');\n  const [Msgusername, setMsgusername] = useState('');\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      userName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    },\n    validationSchema: validate,\n    onSubmit: values => {\n      console.log(values);\n    },\n    children: ({\n      errors,\n      touched\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: imgusername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"userName\",\n          type: \"text\",\n          placeholder: \"Username\",\n          onChange: e => {\n            setUsername(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 65\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), errors.userName && touched.userName ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red',\n          fontheight: '3px'\n        },\n        children: errors.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"kJ5gUf6D6x8OrslHx6W5mWu0Z9A=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["F:/IsementAdvert/MarkeTution/marketution/Client/src/components/signup/Signup.js"],"names":["React","useState","Axios","imgusername","imgemail","imgcontacts","imgprofession","imgpassword","imgfacebook","imggoogle","Login","Navbar","Footer","useHistory","userSchema","Yup","Formik","Form","Field","Signup","validate","object","userName","string","max","required","lastName","email","password","min","confirmPassword","oneOf","ref","username","setUsername","Msgusername","setMsgusername","values","console","log","errors","touched","e","target","value","color","fontheight"],"mappings":"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","sourcesContent":["\r\n\r\n\r\n\r\n\r\n\r\nimport React,{useState} from 'react'\r\nimport Axios from 'axios';\r\n\r\nimport './Signup.css'\r\nimport imgusername from './images/icon/user.png'\r\nimport imgemail from './images/icon/email.png'\r\nimport imgcontacts from './images/icon/contacts.png'\r\nimport imgprofession from './images/icon/profession.png'\r\nimport imgpassword from './images/icon/password.png'\r\nimport imgfacebook from './images/icon/facebook.png'\r\nimport imggoogle from './images/icon/google.png'\r\n\r\nimport Login from './google/Googlesigin';\r\nimport Navbar from '../navbar/Navbar';\r\nimport Footer from '../footer/Footer';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nimport {userSchema} from './UserValidation.js'\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form,Field } from 'formik';\r\n// import { TextField } from './TextField';\r\n\r\n\r\n\r\n\r\nconst Signup = () => {\r\n  const validate = Yup.object({\r\n    userName: Yup.string()\r\n      .max(15, 'Must be 15 characters or less')\r\n      .required('Required'),\r\n    lastName: Yup.string()\r\n      .max(20, 'Must be 20 characters or less')\r\n      .required('Required'),\r\n    email: Yup.string()\r\n      .email('Email is invalid')\r\n      .required('Email is required'),\r\n    password: Yup.string()\r\n      .min(6, 'Password must be at least 6 charaters')\r\n      .required('Password is required'),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref('password'), null], 'Password must match')\r\n      .required('Confirm password is required'),\r\n  })\r\n\r\n\r\n  const [username,setUsername]=useState('');\r\n  const[Msgusername,setMsgusername]=useState('');\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        userName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      }}\r\n      validationSchema={validate}\r\n      onSubmit={values => {\r\n        console.log(values)\r\n      }}\r\n    >\r\n     {({errors,touched})=>(\r\n\r\n\r\n        <Form>\r\n\r\n\r\n\r\n        \r\n            <div className=\"input-text\"><img src={imgusername}/><Field name=\"userName\" type=\"text\" placeholder=\"Username\" onChange={(e)=> {setUsername(e.target.value);}} /></div>\r\n              {errors.userName && touched.userName ? (\r\n                    <div style={{color:'red', fontheight:'3px'}}>\r\n                    {errors.userName}\r\n\r\n                    </div>\r\n\r\n                ):null}\r\n\r\n\r\n\r\n        </Form>\r\n\r\n        )}\r\n\r\n\r\n\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}